#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    // custom shift using mod-morph 

    combos {
        compatible = "zmk,combos";

        layer0 {
            bindings = <&to 0>;
            key-positions = <26 36>;
        };

        layer1 {
            bindings = <&to 1>;
            key-positions = <27 36>;
        };

        layer2 {
            bindings = <&to 2>;
            key-positions = <28 36>;
        };

        layer3 {
            bindings = <&to 3>;
            key-positions = <16 36>;
        };

        layer4 {
            bindings = <&to 4>;
            key-positions = <36 17>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <34>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <20 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp SEMI             &kp COMMA  &kp DOT   &kp P          &kp Y                       &kp F      &kp G  &kp C  &kp R  &kp L
&kp A                &kp O      &kp E     &kp U          &kp I                       &kp D      &kp H  &kp T  &kp N  &kp S
&mt LEFT_SHIFT APOS  &kp Q      &kp J     &kp K          &kp X                       &kp B      &kp M  &kp W  &kp V  &mt RIGHT_SHIFT Z
&kp LCTRL            &kp LALT   &kp LGUI  &kp BACKSPACE  &none  &kp DELETE  &kp ESC  &kp ENTER                       &kp MINUS
            >;
        };

        layer_1 {
            bindings = <
&none           &kp COMMA  &kp PERIOD  &none          &none                           &none      &kp N7  &kp N8  &kp N9  &none
&kp EQUAL       &kp MINUS  &kp PLUS    &kp ASTERISK   &kp SLASH                       &none      &kp N4  &kp N5  &kp N6  &none
&kp LEFT_SHIFT  &none      &none       &none          &none                           &kp N0     &kp N1  &kp N2  &kp N3  &kp RIGHT_SHIFT
&kp LCTRL       &kp LALT   &kp LGUI    &kp BACKSPACE  &none      &kp DELETE  &kp ESC  &kp ENTER                          &kp MINUS
            >;
        };

        layer_2 {
            bindings = <
&kp LS(EXCL)          &kp LS(PIPE)  &kp LS(AMPS)  &kp LS(CARET)  &none                             &none      &kp LS(POUND)  &kp LS(DLLR)  &kp LS(AT)  &kp LS(PRCNT)
&kp LS(LT)            &kp LBKT      &kp LS(LBRC)  &kp LS(LPAR)   &kp FSLH                          &kp BSLH   &kp LS(RPAR)   &kp LS(RBRC)  &kp RBKT    &kp LS(GT)
&mt LEFT_SHIFT GRAVE  &none         &none         &none          &none                             &none      &none          &none         &none       &mt RIGHT_SHIFT QUESTION
&kp LCTRL             &kp LALT      &kp LGUI      &kp BACKSPACE  &none     &kp DELETE  &kp ESCAPE  &kp ENTER                                           &kp MINUS
            >;
        };

        layer_3 {
            bindings = <
&none           &none           &msc SCRL_UP    &none            &kp PAGE_UP                         &kp PAGE_UP    &none     &kp UP    &none      &none
&none           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp PAGE_DOWN                       &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&kp LEFT_SHIFT  &none           &none           &none            &none                               &none          &none     &none     &none      &kp RIGHT_SHIFT
&kp LCTRL       &kp LALT        &kp LGUI        &kp BACKSPACE    &none          &kp DELETE  &kp ESC  &kp ENTER                                     &none
            >;
        };

        layer_4 {
            bindings = <
&to 0           &to 0  &to 0  &to 0  &to 0                     &to 0  &to 0         &to 0         &to 0         &to 0
&bt BT_CLR_ALL  &to 0  &to 0  &to 0  &to 0                     &to 0  &bt BT_SEL 3  &bt BT_SEL 4  &to 0         &to 0
&to 0           &to 0  &to 0  &to 0  &to 0                     &to 0  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &to 0
&to 0           &to 0  &to 0  &to 0  &to 0  &bt BT_CLR  &to 0  &to 0                                            &to 0
            >;
        };
    };
};
